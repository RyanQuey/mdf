function obj = extract(obj)
    % obj = mdfConf.extract(obj)
    %
    % extract configuration from data extracted from configuration file
    %

    % checks if fileData has data 
    if ( isempty(obj.fileData) )
         throw(MException('mdfConf:extract:1',...
            'No file data available. Please specify configuration file to load!!'));
    end
       
    switch (obj.fileType)
        case 'xml'
            extractXml(obj);
        case 'json'
            extractJson(obj);
        case 'legacy'
            extractLegacy(obj);
        otherwise
            % nothing to do
            % initialize configuration data
            obj.confData = struct;
    end
    
    if ~isempty(obj.confData)
        % extract available containers
        obj.menu = struct( ...
            'collections', struct( ...
                'human_name', ...
                cellfun( ...
                    @(item) item.human_name, ...
                    obj.confData.collections.collection, ...
                    'UniformOutput',0), ...
                'machine_name', ...
                cellfun( ...
                    @(item) item.machine_name, ...
                    obj.confData.collections.collection, ...
                    'UniformOutput',0), ...
                'uuid', ...
                cellfun( ...
                    @(item) item.uuid, ...
                    obj.confData.collections.collection, ...
                    'UniformOutput',0), ...                    
                'selected', ...
                cellfun( ...
                    @(item) 0 | (isfield(item,'selected') && item.selected ), ...
                    obj.confData.collections.collection, ...
                    'UniformOutput',0)), ...
            'containers', struct( ...
                'human_name', ...
                cellfun( ...
                    @(item) item.human_name, ...
                    obj.confData.containers.container, ...
                    'UniformOutput',0), ...
                'machine_name', ...
                cellfun( ...
                    @(item) item.machine_name, ...
                    obj.confData.containers.container, ...
                    'UniformOutput',0), ...
                'uuid', ...
                cellfun( ...
                    @(item) item.uuid, ...
                    obj.confData.containers.container, ...
                    'UniformOutput',0), ...                    
                'type', ...
                cellfun( ...
                    @(item) item.type, ...
                    obj.confData.containers.container, ...
                    'UniformOutput',0)) ...
        );
    end %if
end
